require('dotenv').config();
const { Bot, GrammyError, HttpError } = require('grammy');

const bot = new Bot(process.env.BOT_API_KEY);

bot.api.setMyCommands([
    {
        command: 'rules',
        description: 'üëæ–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞',
    },
    {
        command: 'bot',
        description: 'ü§ñ–ë–æ—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
    },
    {
        command: 'admins',
        description: 'üåê–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —á–∞—Ç–∞',
    },
    {
        command: 'coders',
        description: 'üë®‚Äçüíª–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–æ—Ç–∞',
    }
]);

bot.command('start', async (ctx) => {
    await ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É! –î–∞–Ω–Ω—ã–π –†–ü-–ë–æ—Ç —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —á–∞—Ç–∞ "–°–±–æ—Ä–∏—â–µ —Ñ–∞–Ω–∞—Ç–æ–≤ –ü–∞–≤–ª–∞". \n\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!üëæ \n\n–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞: https://telegra.ph/Pravila-CHata-Pavla-Durova-09-21 \n\n‚úçÔ∏ètelegram channel coder\'–∞: @patientcoder')
})

bot.command('coders', async (ctx) => {
    await ctx.reply('üë®‚Äçüíª–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–æ—Ç–∞: \n@heardyy \n@Kan_ekoo \n\n‚úçÔ∏ètelegram channel coder\'–∞: @patientcoder')
})

bot.command('rules', async (ctx) => {
    await ctx.reply('üëæ–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞: https://telegra.ph/Pravila-chata-Pavla-09-22!')
})

bot.command('admins', async (ctx) => {
    await ctx.reply('üåê–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —á–∞—Ç–∞: \n@Kan_ekoo \n@StintlerGojo \n@ajerqd \n@StintlerGojo \n@heardyy \n@itssssgoodman \n@OMN1XOR')
})

bot.command('bot', async (ctx) => {
    await ctx.reply('ü§ñ–ë–æ—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—à–µ–≥–æ —á–∞—Ç–∞: @SupKaneBot \n\n–í –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É, –ø–æ–¥–∞—Ç—å –∞–ø–µ–ª–ª—è—Ü–∏—é –∏ —Ç.–¥. \n\n‚úçÔ∏ètelegram channel coder\'–∞: @patientcoder')
})

bot.hears('!–ø—Ä–∞–≤–∏–ª–∞', async (ctx) => {
    await ctx.reply('üëæ–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞: https://telegra.ph/Pravila-chata-Pavla-09-22', {
        reply_parameters: { message_id: ctx.msg.message_id },
      });
})
bot.hears('!–∞–¥–º–∏–Ω—ã', async (ctx) => {
    await ctx.reply('üåê–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —á–∞—Ç–∞: \n@Kan_ekoo \n@ajerqd \n@StintlerGojo \n@heardyy \n@itssssgoodman \n@OMN1XOR', {
        reply_parameters: { message_id: ctx.msg.message_id },
      });
})
bot.hears('!–±–æ—Ç', async (ctx) => {
    await ctx.reply('ü§ñ–ë–æ—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—à–µ–≥–æ —á–∞—Ç–∞: @SupKaneBot \n\n–í –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É, –ø–æ–¥–∞—Ç—å –∞–ø–µ–ª–ª—è—Ü–∏—é –∏ —Ç.–¥. \n\n‚úçÔ∏ètelegram channel coder\'–∞: @patientcoder', {
        reply_parameters: { message_id: ctx.msg.message_id },
      });
})
bot.hears('!–ø–æ–º–æ—â—å', async (ctx) => {
    await ctx.reply('ü§ñ–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: \n!–ø–æ–º–æ—â—å - –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n/admins - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —á–∞—Ç–∞\n/bot - –±–æ—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∞\n/rules - –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞\n\n–†–ü-–∫–æ–º–∞–Ω–¥—ã: \n/e (—é–∑–µ—Ä–Ω–µ–π–º) - —É–∫—É—Å–∏—Ç—å \n/n (—é–∑–µ—Ä–Ω–µ–π–º) - –ø–æ–≥–ª–∞–¥–∏—Ç—å \n/k (—é–∑–µ—Ä–Ω–µ–π–º) - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å', {
        reply_parameters: { message_id: ctx.msg.message_id },
      });
})
bot.hears('!–∫–æ–¥–µ—Ä—ã', async (ctx) => {
    await ctx.reply('üë®‚Äçüíª–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–æ—Ç–∞: \n@heardyy \n@Kan_ekoo \n\n‚úçÔ∏ètelegram channel coder\'–∞: @patientcoder', {
        reply_parameters: { message_id: ctx.msg.message_id },
      });
})

bot.catch((err) => {
    const ctx = err.ctx;
    console.error(`Error while handling update ${ctx.update.update_id}`);
    const e = err.error;

    if (e instanceof GrammyError) {
    console.error("Error in request:", e.description) 
    } else if (e instanceof HttpError) {
        console.error("Could not contact Telegram:", e);
    } else {
        console.error("Unknown error:", e);
    }
})

bot.command("n", async (ctx) => {
    if (!ctx.message.text.split(" ")[1]) {
        return;
    }
    let username = ctx.message.text.split(" ")[1];
    await ctx.reply(`${ctx.from.username} <b>–ø–æ–≥–ª–∞–¥–∏–ª(–∞) –ø–æ –≥–æ–ª–æ–≤–µ</b> ${username}ü•∞`, {
        reply_parameters: {
            message_id: ctx.message.message_id
        }

    })
})
bot.command("k", async (ctx) => {
    if (!ctx.message.text.split(" ")[1]) {
        return;
    }
    let username = ctx.message.text.split(" ")[1];
    await ctx.reply(`${ctx.from.username} –ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞) –≤ —â–µ—á–∫—É ${username}ü•∞`, {
        reply_parameters: {
            message_id: ctx.message.message_id
        }
    })
})
bot.command("e", async (ctx) => {
    if (!ctx.message.text.split(" ")[1]) {
        return;
    }
    let username = ctx.message.text.split(" ")[1];
    await ctx.reply(`${ctx.from.username} —É–∫—É—Å–∏–ª–∞(–∞) –∑–∞ –ø–∞–ª—å—á–∏–∫ ${username}ü•∞`, {
        reply_parameters: {
            message_id: ctx.message.message_id
        }
    })
})

bot.start();